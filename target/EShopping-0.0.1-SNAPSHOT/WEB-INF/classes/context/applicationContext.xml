<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
 	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
 
 <context:property-placeholder location="classpath:application.properties" />
   <context:component-scan base-package="edu.mum" /> 
   
   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan" value="edu.mum.domain" />
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
      <property name="jpaProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">create</prop>
            <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
 			<prop key="use_sql_comments">${use_sql_comments}</prop>
 			<prop key="hibernate.format_sql">${hibernate.format_sql}</prop> 
             <prop key="hibernate.hbm2ddl.import_files">populate.sql</prop>
          </props>
      </property>
   </bean>
  
 	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
   </bean>
   
   <!-- Scan for  transaction-based resources -->
   	<context:component-scan base-package="edu.mum.service,edu.mum.dao" />
  
    <tx:annotation-driven transaction-manager="transactionManager"/>
 
   <bean id="persistenceExceptionTranslationPostProcessor"
      class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
 


<!-- EMAIL  -->

 <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="smtp.gmail.com" />
	<property name="port" value="587" />
	<!-- Need to place your own username & password here -->
	<!-- INTERNAL see EAI Notes -->
 	<property name="username" value="poorrayan@gmail.com" />
	<property name="password" value="ymcmb2012$" />
    <property name="javaMailProperties">
	 <props>
	 		<prop key="mail.transport.protocol">smtp</prop>
       	      <prop key="mail.smtp.auth">true</prop>
       	      <prop key="mail.smtp.starttls.enable">true</prop>
      </props>
	</property>
  </bean>
 
  
 	<!--  THYMELEAF-SPECIFIC ARTIFACTS                                    -->
	<!--  TemplateEngine <- TemplateResolver <- ViewResolver              -->	
	
     <bean id="emailTemplateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
 		<property name="prefix" value="templates/" />
		<property name="suffix" value=".html" />
 		<property name="templateMode" value="HTML5" />
        <property name="cacheable" value="false"/>
 	</bean>
  
	<bean id="emailTemplateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolvers">
			<set>
				<ref bean="emailTemplateResolver"/>
			</set>
		</property>
 	</bean>

 
</beans>
